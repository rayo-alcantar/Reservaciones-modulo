/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ReservacionesUI;

import java.sql.Connection;
import conexion.ConexionBD;
import static conexion.ConexionBD.getConnection;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author rodol
 */
public class Ventana321 extends javax.swing.JFrame {

    ConexionBD conexion;
    private static int idSucursal;
    private static int idMesa;
    private static int estado;
    /**
     * Creates new form Ventana321
     */
    public Ventana321(int idSucursal, int idMesa) throws SQLException, InterruptedException {
        initComponents();
        conexion = new ConexionBD();
        this.idSucursal = idSucursal;
        this.idMesa = idMesa;
        consultaEstado();
        System.out.println(estado);
        apariencia();
    }
    
    private void apariencia() throws InterruptedException{
        switch (estado) {
            case 1:
            case 2:
            case 3:
                jLbl1.setText("Bienvenidos!");
                jBtn1.setText("Pedir");
                break;
            case 4:
            case 5:
                jLbl1.setText("Su comida se esta preparando");
                jBtn1.setVisible(false);
                esperarComidaLista();
                break;
            case 6:
            case 7:
            case 8:
                jLbl1.setText("Su comida ya esta lista");
                jBtn1.setText("Pagar");
                jBtn1.setVisible(true);
            default:
                break; 
        }
    }

    private void consultaEstado() throws SQLException{
        int vEstado = -1;
        try (Connection conn = getConnection()){
            String query = "SELECT estado from mesa where idMesa = ?;";
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setInt(1,idMesa);
            ResultSet rs = ps.executeQuery();
            rs.next();
            vEstado = rs.getInt(1);
            System.out.println("1" + vEstado);
        } catch (SQLException ex){
            System.out.println("Error: " + ex);
        }
        this.estado =  vEstado;
    }
    
    public static void cambiarEstado(){
        String query = "";
        try (Connection conn = getConnection()){
            switch (estado){
                case 1:
                case 2:
                case 3:
                    query = "UPDATE mesa SET estado = 4 where idMesa = ?";
                    break;
                case 4:
                    query = "UPDATE mesa SET estado = 5 where idMesa = ?";
                    break;
                case 5:
                case 6:
                case 7:
                case 8:
                    query = "UPDATE mesa SET estado = 1 where idMesa = ?";
                default:
                    break;
            }
            PreparedStatement ps = conn.prepareStatement(query);
            ps.setInt(1, idMesa);
            ps.executeUpdate();
        } catch (SQLException ex) {
            System.out.println("Error en cambiarEstado: " + ex);
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLbl1 = new javax.swing.JLabel();
        jBtn1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLbl1.setText("jLabel1");

        jBtn1.setText("jButton1");
        jBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(336, 336, 336)
                        .addComponent(jLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(442, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(160, Short.MAX_VALUE)
                .addComponent(jLbl1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(96, 96, 96)
                .addComponent(jBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(170, 170, 170))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn1ActionPerformed
        try {
            cambiarEstado();
            switch (estado) {
                case 1:
                case 2:
                case 3:
                    new Ventana(idSucursal,idMesa).setVisible(true);
                    this.dispose();
                    break;
                case 4:
                case 5:
                case 6:
                case 7:
                case 8:
                    try {
                        consultaEstado();
                    } catch (SQLException ex) {
                        System.out.println(ex);
                    }
                    apariencia();
                default:
                    break;
            }
            // TODO add your handling code here:
        } catch (InterruptedException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jBtn1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana321.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana321.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana321.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana321.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Ventana321(idSucursal, idMesa).setVisible(true);
                } catch (SQLException ex) {
                    System.out.println("Error: " + ex);
                } catch (InterruptedException ex) {
                    Logger.getLogger(Ventana321.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    

    
    /**
     * Consulta el estado de la mesa cada 30 segundos para poder ver cuando este lista la comida
     * @throws InterruptedException 
     */
    private void esperarComidaLista() throws InterruptedException{
        //Crea el temporalizador para que se repita X instruccion (llamado tiempo)
        Timer tiempo = new Timer("ConsultaEstado");
        //Creacion del trabajo que se va a realizar repepitivamente (llamado validacion)
        TimerTask consulta = new TimerTask() {
            @Override
            public void run() {
                //Consulta el estado de la mesa
                try (Connection conn = getConnection()){
                    consultaEstado();
                } catch (SQLException ex){
                    System.out.println(ex);
                }
                //Si la mesa se encuentra en estado de comida lista
                if (estado == 6){
                    try {
                        System.out.println("Ya esta");
                        apariencia();
                        //Se termina el temporalizador y continua el proceso del restaurante
                        Thread.sleep(0);
                        tiempo.cancel();
                        
                    } catch (InterruptedException ex) {
                        System.out.println(ex);
                    }
                } else {
                    System.out.println("No esta listo");
                }
            }
        };
        //Se inicia el temporalizador y cada 30 segundos se realiza el proceso de consulta
        tiempo.scheduleAtFixedRate(consulta,0,30000L);
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtn1;
    private javax.swing.JLabel jLbl1;
    // End of variables declaration//GEN-END:variables
}
