package ReservacionesUI;

import conexion.ConexionBD;

import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Pedro Quiroz
 */
public class Sucursal extends javax.swing.JFrame {

    /**
     * Creates new form Sucursal
     */
    public Sucursal() {
        initComponents();
        loadRestaurantes();
        addListSelectionListener();
    }

    private void loadRestaurantes() {
        List<String> restaurantes = new ArrayList<>();

        try ( Connection connection = ConexionBD.getConnection()) {
            String sql = "SELECT nombre FROM sucursal";
            try ( PreparedStatement statement = connection.prepareStatement(sql)) {
                try ( ResultSet resultSet = statement.executeQuery()) {
                    while (resultSet.next()) {
                        String nombre = resultSet.getString("nombre");
                        restaurantes.add(nombre);
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        // Populate the JList
        lstRestaurantes.setListData(restaurantes.toArray(new String[0]));
    }

    private void addListSelectionListener() {
        lstRestaurantes.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    // Get the selected restaurant's idSucursal
                    int selectedIndex = lstRestaurantes.getSelectedIndex();
                    if (selectedIndex != -1) {
                        String selectedRestaurant = lstRestaurantes.getSelectedValue();
                        int idSucursal = getIdSucursal(selectedRestaurant);

                        // Pass idSucursal to MesaReservacion
                        openMesaReservacion(idSucursal);
                    }
                }
            }
        });
    }

    private int getIdSucursal(String nombreRestaurante) {
        int idSucursal = -1;

        try ( Connection connection = ConexionBD.getConnection()) {
            String sql = "SELECT idSucursal FROM sucursal WHERE nombre = ?";
            try ( PreparedStatement statement = connection.prepareStatement(sql)) {
                statement.setString(1, nombreRestaurante);
                try ( ResultSet resultSet = statement.executeQuery()) {
                    if (resultSet.next()) {
                        idSucursal = resultSet.getInt("idSucursal");
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return idSucursal;
    }

    private void openMesaReservacion(int idSucursal) {
        if (hasAvailableTables(idSucursal)) {
            int response = JOptionPane.showConfirmDialog(
                    this, "Acceder a Sucursal " + idSucursal + "?", "ConfirmaciÃ³n", JOptionPane.YES_NO_OPTION);

            if (response == JOptionPane.YES_OPTION) {
                MesaReservacion mesaReservacion = new MesaReservacion(idSucursal);
                mesaReservacion.setVisible(true);
            }
        } else {
            JOptionPane.showMessageDialog(this, "La sucursal seleccionada no tiene mesas disponibles en este momento.",
                    "Mesas no disponibles", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    private boolean hasAvailableTables(int idSucursal) {
        boolean hasAvailableTables = false;

        try ( Connection connection = ConexionBD.getConnection()) {
            String sql = "SELECT COUNT(*) FROM mesa WHERE idSucursal = ? AND estado = 1";
            try ( PreparedStatement statement = connection.prepareStatement(sql)) {
                statement.setInt(1, idSucursal);
                try ( ResultSet resultSet = statement.executeQuery()) {
                    if (resultSet.next()) {
                        int count = resultSet.getInt(1);
                        hasAvailableTables = count > 0;
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return hasAvailableTables;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstRestaurantes = new javax.swing.JList<>();
        lblRestaurantes = new javax.swing.JLabel();
        jLabelImagen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(32, 17, 72));

        lstRestaurantes.setBackground(new java.awt.Color(32, 17, 72));
        lstRestaurantes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(85, 231, 255)));
        lstRestaurantes.setFont(new java.awt.Font("Bahiana", 0, 31)); // NOI18N
        lstRestaurantes.setForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(lstRestaurantes);

        lblRestaurantes.setFont(new java.awt.Font("Bahiana", 0, 48)); // NOI18N
        lblRestaurantes.setForeground(new java.awt.Color(85, 231, 255));
        lblRestaurantes.setText("Sucursales");

        jLabelImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Logo Neo Tokio.png"))); // NOI18N
        jLabelImagen.setPreferredSize(new java.awt.Dimension(500, 500));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(582, 582, 582)
                        .addComponent(lblRestaurantes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(245, 245, 245)))
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblRestaurantes)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 193, Short.MAX_VALUE)
                        .addGap(73, 73, 73))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sucursal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sucursal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sucursal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sucursal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sucursal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelImagen;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblRestaurantes;
    private javax.swing.JList<String> lstRestaurantes;
    // End of variables declaration//GEN-END:variables
}
